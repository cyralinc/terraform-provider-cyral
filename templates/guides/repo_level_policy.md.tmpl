---
page_title: "Setup repo-level policy"
---

In this guide, we will attach repo-level data access policies to PostgreSQL and MySQL data
repositories. After reading this guide, you will understand how to setup repo-level policies
and use Cyral's built-in policy templates to control data access.

We recommend that you also read the [Cyral policies](https://cyral.com/docs/policy/overview/)
documentation for more information.

## Repo-level policy types

Cyral offers nine pre-built repo-level policy types. Learn more about them [here](https://cyral.com/docs/policy/repo-level/).
This guide demonstrates creating instances of each type.
Additionally, review the [cyral_rego_policy_instance](https://registry.terraform.io/providers/cyralinc/cyral/latest/docs/resources/rego_policy_instance) resource for clarity in parameters.

## Dataset Protection policy

Add a Dataset Protection policy to restrict access to
specific tables or schemas in the data repositories:

-> **Note** The Dataset Protection policy template is only enabled by default in control planes
`v4.13` and later. If you have a previous version, please reach out to our customer success
team to enable it.

### Example Usage

{{ tffile "examples/guides/repo_level_policy_table_level.tf" }}

## Data Masking policy

Implement a repo-level policy to mask fields for specific users:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_data_masking.tf" }}

## Data Protection policy

Add a repo-level policy to guard against unauthorized updates:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_data_protection.tf" }}

## Data Firewall policy

Set up a repo-level policy to limit which rows users can read from a table:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_data_firewall.tf" }}

## User Segmentation policy

Implement a repo-level policy to limit which rows a set of users can read from your database:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_user_segmentation.tf" }}

## Rate Limit policy

Add a repo-level policy to implement a threshold on sensitive data reads over time:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_rate_limit.tf" }}

## Read Limit policy

Implement a repo-level policy to prevent certain records from being read beyond a specified limit:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_read_limit.tf" }}

## Repository Protection policy

Set up a repo-level policy to alert when more than a specified number of records are updated or deleted:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_repository_protection.tf" }}

## Service Account Abuse policy

Implement a repo-level policy to ensure service accounts can only be used by intended applications:

### Example Usage

{{ tffile "examples/guides/repo_level_policy_service_account_abuse.tf" }}

## Next steps

This guide presents a very simple example of Cyral repo-level policy for each one of the pre-built templates.
Cyral policies have many more capabilities. Check out all parameters that each repo-level policy type supports and use them however you see fit:
[template_parameters in cyral_rego_policy_instance](https://registry.terraform.io/providers/cyralinc/cyral/latest/docs/resources/rego_policy_instance#template-parameters).
